{"mappings":"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","sources":["src/index.js"],"sourcesContent":["const inputTitleNode = document.getElementById(\"inputTitle\");\nconst addMovieInListNode = document.getElementById(\"addMovieInList\");\nconst moviesOutputNode = document.getElementById(\"moviesOutput\");\nconst errorTitleNode = document.getElementById(\"errorTitle\");\n\nconst VALIDATION_MIN_LENGTH = 1;\nconst VALIDATION_MAX_LENGTH = 50;\n\nconst ERROR_TITLE_NOT_LENGTH = \"Напиши заголовок\";\nconst ERROR_TITLE_MIN_LENGTH = `Введите более ${VALIDATION_MIN_LENGTH} символа`;\nconst ERROR_TITLE_MAX_LENGTH = `Вы ввели максимальное количество символов ${VALIDATION_MAX_LENGTH}`;\n\nconst movies = JSON.parse(localStorage.getItem(\"movies\")) || [];\n\n//очистка инпута\nfunction clearInput() {\n  inputTitleNode.value = \"\";\n}\n//валидация инпута\nfunction validationTitle() {\n  inputTitleNode.style.borderBottom = \"1px solid black\";\n  errorTitleNode.classList.remove(\"errorTitle_red\");\n  errorTitleNode.innerText = \"\";\n\n  if (!inputTitleNode.value) {\n    inputTitleNode.style.borderBottom = \"1px solid red\";\n    errorTitleNode.classList.add(\"errorTitle_red\");\n    errorTitleNode.innerText = ERROR_TITLE_NOT_LENGTH;\n    return false;\n  }\n  if (inputTitleNode.value.length <= VALIDATION_MIN_LENGTH) {\n    inputTitleNode.style.borderBottom = \"1px solid red\";\n    errorTitleNode.classList.add(\"errorTitle_red\");\n    errorTitleNode.innerText = ERROR_TITLE_MIN_LENGTH;\n    return false;\n  }\n  if (inputTitleNode.value.length > VALIDATION_MAX_LENGTH) {\n    inputTitleNode.style.borderBottom = \"1px solid red\";\n    errorTitleNode.classList.add(\"errorTitle_red\");\n    errorTitleNode.innerText = ERROR_TITLE_MAX_LENGTH;\n    return false;\n  }\n\n  return true;\n}\n//функциы возврата значения из заголовка\nfunction getTitleFromUser() {\n  if (!validationTitle(inputTitleNode.value.trim())) {\n    return; // Если валидация не пройдена, возвращаем undefined\n  }\n  // Если валидация пройдена, возвращаем значение\n  return inputTitleNode.value.trim();\n}\n//создание HTML элемента - movie\nfunction renderMovies() {\n  moviesOutputNode.innerHTML = \"\";\n\n  const moviesList = document.createElement(\"ul\");\n  moviesList.className = \"movies__list\";\n\n  movies.forEach((movie, index) => {\n    const moviesItem = document.createElement(\"li\");\n    moviesItem.className = \"movies__item-inner\";\n    // moviesItem.setAttribute(\"id\", index);\n    moviesItem.id = index;\n\n    const movieLabel = document.createElement(\"label\");\n    movieLabel.className = \"label\";\n\n    const realCheckbox = document.createElement(\"input\");\n    realCheckbox.className = \"checkbox\";\n    realCheckbox.type = \"checkbox\";\n    realCheckbox.checked = movie.checked; // Устанавливаем состояние чекбокса\n\n    const spanFakeCheckbox = document.createElement(\"span\");\n    spanFakeCheckbox.className = \"fake\";\n\n    const spanTitleMovie = document.createElement(\"span\");\n    spanTitleMovie.className = \"movie-title\";\n    spanTitleMovie.innerText = movie.title;\n\n    const movieCloseBtn = document.createElement(\"button\");\n    movieCloseBtn.className = \"movie-close\";\n    // movieCloseBtn.setAttribute(\"id\", index);\n    movieCloseBtn.id = index;\n\n    movieLabel.appendChild(realCheckbox);\n    movieLabel.appendChild(spanFakeCheckbox);\n    movieLabel.appendChild(spanTitleMovie);\n    moviesItem.appendChild(movieLabel);\n    moviesItem.appendChild(movieCloseBtn);\n    moviesList.appendChild(moviesItem);\n\n    // Устанавливаем класс 'checked' в зависимости от состояния чекбокса\n    if (movie.checked) {\n      moviesItem.classList.add(\"checked\");\n      spanTitleMovie.style.textDecoration = \"line-through\";\n    }\n\n    // Обработчик для чекбокса\n    realCheckbox.addEventListener(\"click\", () => {\n      movie.checked = realCheckbox.checked; // Сохраняем состояние чекбокса\n      localStorage.setItem(\"movies\", JSON.stringify(movies));\n\n      // console.log(e.target.checked);\n      if (realCheckbox.checked) {\n        moviesItem.classList.add(\"checked\");\n        spanTitleMovie.style.textDecoration = \"line-through\";\n        moviesItem.classList.remove(\"error\");\n      } else {\n        moviesItem.classList.remove(\"checked\");\n        spanTitleMovie.style.textDecoration = \"none\";\n      }\n    });\n\n    // Обработчик для кнопки закрытия\n    movieCloseBtn.addEventListener(\"click\", function () {\n      if (!realCheckbox.checked) {\n        moviesItem.classList.add(\"error\");\n        return;\n      }\n\n      movies.splice(index, 1); // Удаляем фильм из локального массива\n      renderMovies(); // Перерисовываем фильмы\n\n      localStorage.setItem(\"movies\", JSON.stringify(movies));\n    });\n  });\n\n  moviesOutputNode.appendChild(moviesList);\n}\n\nfunction newMovieHandler() {\n  const movieName = getTitleFromUser();\n\n  if (!validationTitle(movieName)) {\n    return;\n  }\n\n  const newMovie = {\n    title: movieName,\n  };\n  movies.push(newMovie);\n  // записываем фильмы в локалсторадж\n  localStorage.setItem(\"movies\", JSON.stringify(movies));\n\n  renderMovies();\n  clearInput();\n}\n\nfunction clickToEnter(e) {\n  if (e.keyCode === 13) {\n    e.preventDefault();\n    newMovieHandler();\n  }\n}\n\n//функция обработчика по нажатию на Enter\ninputTitleNode.addEventListener(\"keydown\", clickToEnter);\n//функция обработчика по клику\naddMovieInListNode.addEventListener(\"click\", newMovieHandler);\n\nconst init = () => {\n  return renderMovies(movies, moviesOutputNode);\n};\ninit();\n"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}